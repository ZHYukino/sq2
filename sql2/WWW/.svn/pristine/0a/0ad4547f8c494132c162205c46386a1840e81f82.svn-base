// JavaScript Document

function ajaxcreateXMLHttpRequest()
{
	var xmlHttp=null;
	//一般先判断非IE浏览器
	//window对象中有XMLHttpRequest存在就是非IE，包括（IE7，IE8）
	if(window.XMLHttpRequest){
		xmlHttp=new XMLHttpRequest();//非IE以及IE7，IE8浏览器
		if(xmlHttp.overrideMimeType){
			xmlHttp.overrideMimeType("text/xml");//重置mime类型
		}
	//window对象中有ActiveXObject属性存在就是IE浏览器的低版本
	}
	else if(window.ActiveXObject){
		var versions=['Microsoft.XMLHTTP', 'MSXML.XMLHTTP', 'Msxml2.XMLHTTP.7.0','Msxml2.XMLHTTP.6.0','Msxml2.XMLHTTP.5.0', 'Msxml2.XMLHTTP.4.0', 'MSXML2.XMLHTTP.3.0', 'MSXML2.XMLHTTP'];//各种IE浏览器创建Ajax对象时传递的参数
		for(var i=0; i<versions.length; i++){
			try{
				xmlHttp=new ActiveXObject(versions[i]);//各个IE浏览器版本的参数不同
				if(xmlHttp){
					return xmlHttp;
				}
			}catch(e){
				xmlHttp=false;
			}
		}
	}
	return xmlHttp;
}

function ietypecheck()
{
	var Sys = {};
	var ua = navigator.userAgent.toLowerCase();
	var s;
		(s = ua.match(/(msie\s|trident.*rv:)([\d.]+)/)) ? Sys.ie = s[2] :
		(s = ua.match(/firefox\/([\d.]+)/)) ? Sys.firefox = s[1] :
		(s = ua.match(/chrome\/([\d]+)/)) ? Sys.chrome = s[1] :
		(s = ua.match(/opera.([\d.]+)/)) ? Sys.opera = s[1] :
		(s = ua.match(/version\/([\d.]+).*safari/)) ? Sys.safari = s[1] : 0;
	if (Sys.ie){ietype = 0}
	else {ietype =1}
}
