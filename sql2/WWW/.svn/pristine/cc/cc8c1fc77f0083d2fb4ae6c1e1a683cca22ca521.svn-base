//下拉框
function loadCheckbox(){
	$.ajax({
		type: "GET",
		url : "json/getcheck.asp?itype=1&dc=" + new Date().getTime() + "",
		//data:{},
		dataType: "json",
		success: function(data){
			for(var dataitem in data){
				if(data[dataitem]==1){
					$("input[typename="+ dataitem +"]").attr("checked","");
				}
			}
			//赋值加载图
			selectTunnel();
		 },
		error: function(json){}
	});
}

function saveCheckbox(typevalue){
	$.ajax({
		type: "GET",
		url : "json/getcheck.asp?itype=0&name="+ typevalue +"&dc=" + new Date().getTime() + "",
		//data:{},
		dataType: "json",
		success: function(data){},
		error: function(json){}
	});
}

//加载隧道时
function selectTunnel(){
	for(i=0;i<$(".default-checkbox").length;i++){
		if ($(".default-checkbox:eq("+ i +")").is(":checked")) {
			var typevalue=$(".default-checkbox:eq("+ i +")").attr("typename");
			var picclass=returnPicclass(typevalue);
			var selectvalue=$("#default_place_select").val();
			defaultAjax(typevalue,selectvalue,picclass,0);
		}
	}
}

function defaultAjax(typevalue,selectvalue,picclass,unum){
	//当前背景图大小
	picW=$("#default_panel_img").width();
	picH=$("#default_panel_img").height();
	var arr_;
	switch(typevalue){
		case "TS":
			arr_=arr_TS;
			break;
		case "LS":
			arr_=arr_LS;
			break;
		case "LIGHT":
			arr_=arr_LIGHT;
			break;
		case "LED":
			arr_=arr_LED;
			break;
		case "FAN":
			arr_=arr_FAN;
			break;
		case "COVI":
			arr_=arr_COVI;
			break;
		case "FSFX":
			arr_=arr_FSFX;
			break;
		case "FB":
			arr_=arr_FB;
			break;
		case "FGS":
			arr_=arr_FGS;
			break;
		case "FGW":
			arr_=arr_FGW;
			break;
		case "FGR":
			arr_=arr_FGR;
			break;
		case "DOOR":
			arr_=arr_DOOR;
			break;
		case "CAM":
			arr_=arr_CAM;
			break;
	/*预留
		case "CMS":
			arr_=arr_CMS;
			break;
		case "DEC":
			arr_=arr_DEC;
			break;
		case "ET":
			arr_=arr_ET;
			break;
		case "VD":
			arr_=arr_VD;
			break;
		case "PUMP":
			arr_=arr_PUMP;
			break;
		case "WD":
			arr_=arr_WD;
			break;
	*/
	}
	if(unum==0){
		defaultAddImg(typevalue,selectvalue,picclass,arr_,0);
	}else{
		defaultUpdateImg(typevalue,selectvalue,picclass,arr_,0);
	}
}

function defaultAddImg(typevalue,selectvalue,picclass,arr_info,snum){
	for(var snum=0;snum<arr_info.length;snum++){
		var arrnum=arr_info[snum][0];
		var sdid=arr_info[snum][2];
		if(selectvalue==sdid){
			//状况
			var id=arr_info[snum][1];
			var devcode=arr_info[snum][3];
			var title=arr_info[snum][4]+"&#13;"+arr_info[snum][13]+"&#13;"+arr_info[snum][5];
			var updown=arr_info[snum][6];
			var ipaddr=arr_info[snum][7];
			var ipport=arr_info[snum][8];
			var shape=arr_info[snum][9];
			//自适应
			//初始设置背景图大小
			var pointX=arr_info[snum][10];
			var pointY=arr_info[snum][11];
			//状态值
			var state=arr_info[snum][18];
			var i1=arr_info[snum][19];
			var i2=arr_info[snum][20];
			var n1=arr_info[snum][21];
			var n2=arr_info[snum][22];
			var channel=arr_info[snum][26];//通道号
			//var v1=arr_info[snum][23];
			//var v2=arr_info[snum][24];
			//图片位置
			var thisLeft=picW/100*pointX;
			var thisTop=picH/100*pointY+Ht;
			//根据状况获取设备信息
			var picinfo=returnPicinfo(1,title,typevalue,state,shape,updown,i1,i2,n1,n2);
			//根据状况获取图片地址
			var picurl=returnPicurl(typevalue,state,shape,updown,i1,i2);
			//拼接界面div开始
			var picmodule="<div id=\""+ id +"\" arrnum=\""+ arrnum +"\" class=\""+ picclass +" picselectclass\" style=\"top:"+ thisTop +"px;left:"+ thisLeft +"px" +"\" ipaddr=\""+ ipaddr +"\" channel=\""+ channel +"\" state=\""+ state +"\" title=\""+ title +"\" devcode=\""+ devcode +"\">";
			//+"\" title=\""+ title +"\" state=\""+ state +"\" shape=\""+ shape 
			//+"\" updown=\""+ updown +"\" i1=\""+ i1 +"\" i2=\""+ i2 +"\" n1=\""+ n1 
			//+"\" n2=\""+ n2 +"\" v1=\""+ v1 +"\" v2=\""+ v2 +"\" picurl=\""+ picurl +"\" ipport=\""+ ipport +"\" 
			picmodule=picmodule+"<img title=\""+ picinfo +"\" src=\""+ picurl +"\" />";
			switch(typevalue){
				case "LIGHT":
					picmodule=picmodule+"<div class=\"picatfont\">in:"+ n1 +" out:"+ n2 +"</div>";
					break;
				case "COVI":
					picmodule=picmodule+"<div class=\"picatfont\">co:"+ n1 +" vi:"+ n2 +"</div>";
					break;
				case "FSFX":
					picmodule=picmodule+"<div class=\"picatfont\">fs:"+ n1 +" fx:"+ i1 +"</div>";
					break;
			}
			picmodule=picmodule+"</div>";
			//拼接结束
			$("#default_cover").append(picmodule);
			//左键事件
			bindLeftKey(picclass,id);
			//右键菜单
			bindRightKey(id,picclass,shape);
		}
	}
}

//判断更新时
function defaultUpdateImg(typevalue,selectvalue,picclass,arr_info,snum){
	for(var snum=0;snum<arr_info.length;snum++){
		//信息
		var sdid=arr_info[snum][2];
		//状况变化/时间，值变化/时间
		var statego=arr_info[snum][14];
		var valuego=arr_info[snum][16];
		if(selectvalue==sdid){
			if(statego==true || valuego==true){
				//更新状态
				arr_info[snum][14]=false;
				arr_info[snum][16]=false;
				//状况
				var id=arr_info[snum][1];
				var title=arr_info[snum][4]+"\n"+arr_info[snum][13]+"\n"+arr_info[snum][5];
				var updown=arr_info[snum][6];
				var shape=arr_info[snum][9];
				var state=arr_info[snum][18];
				var i1=arr_info[snum][19];
				var i2=arr_info[snum][20];
				var n1=arr_info[snum][21];
				var n2=arr_info[snum][22];
				//根据状况获取设备信息
				var picinfo=returnPicinfo(2,title,typevalue,state,shape,updown,i1,i2,n1,n2);
				//根据状况获取图片地址
				var picurl=returnPicurl(typevalue,state,shape,updown,i1,i2);
				$("#"+id+" img").attr("title",picinfo);
				$("#"+id+" img").attr("src",picurl);
				switch(typevalue){
					case "LIGHT":
						$("#"+id+" .picatfont").html("in:"+ n1 +" out:"+ n2 +"");
						break;
					case "COVI":
						$("#"+id+" .picatfont").html("co:"+ n1 +" vi:"+ n2 +"");
						break;
					case "FSFX":
						$("#"+id+" .picatfont").html("fs:"+ n1 +" fx:"+ i1 +"");
						break;
				}
			}
		}
	}
}

function bindLeftKey(picclass,id){
	//信号灯双击
	if(picclass=="default-pic-TS"||picclass=="default-pic-LS"){
		$("#"+ id +"").on('dblclick',function(){
			layer.open({
				type: 1 //此处以iframe举例
				,title: '信号灯控制 — '+$("#default_place_select").find("option:selected").text()
				,area: ['800px', '480px']
				,shade: 0
				,maxmin: true
				,offset: [Ht+10] 
				,id: 'LAY_LSTSdbclick_panel' //防止重复弹出
				,content: $("#LSTSdbclick_panel")
				,btn: ['关闭'] //只是为了演示
				,yes: function(index, layero){
					layer.close(index);
				}
				,zIndex: layer.zIndex //重点1
				,success: function(layero){
					layer.setTop(layero); //重点2
					//console.log(arr_PLAN);
					
					//更新下拉框内容
					updateTSSelectContent("LSTSdbclick_select",arr_PLAN);
				}
			})
		})
	}
	//COVI单击
	if(picclass=="default-pic-COVI"){
		$("#"+ id +"").on('click',function(){
			if(flag){
				var coviid=$(this).attr("id");
				layer.open({
					type: 1 //此处以iframe举例
					,title: $("#control_menu_covi").html()
					,area: ['800px', '480px']
					,shade: 0
					,maxmin: true
					,offset: [Ht+10]
					,id: 'LAY_control_data_covi' //防止重复弹出
					,content: $("#control_data_covi")
					,btn: ['关闭'] //只是为了演示
					,yes: function(index, layero){
						layer.close(index);
					}
					,zIndex: layer.zIndex //重点1
					,success: function(layero){
						layer.setTop(layero); //重点2
						for(var i=0;i<arr_COVI.length;i++){
							if(arr_COVI[i][1]==coviid){
								var covistate=arr_COVI[i][18];
								var covi_img=returnStatePic("covi",covistate);
								var covi_statename=returnStateName(covistate);
								var covi_name=arr_COVI[i][4];
								var covi_addr=arr_COVI[i][5];
								$("#covi_img").attr("src",covi_img);
								$("#covi_name").html(covi_name);
								$("#covi_addr").html(covi_addr);
								$("#covi_state").html(covi_statename);
								//取最近的一次值
								var covi_coval=arr_COVI[i][21];
								var covi_vival=arr_COVI[i][22];
								$("#covi_coval").html(covi_coval);
								$("#covi_vival").html(covi_vival);
							}
						}
						$.ajax({
							type: "GET",
							url : "json/getrptcovi.asp?itype=4&devid="+ coviid +"&dc=" + new Date().getTime() + "",
							//data:{},
							dataType: "json",
							success: function(data){
								var arrCo=[];
								var arrVi=[];
								var arrCollTime=[];
								for(i=0;i<data.data.length;i++){
									arrCo.push(parseInt(data.data[i].coval));
									arrVi.push(parseInt(data.data[i].vival));
									arrCollTime.push(returnFormatTime(data.data[i].colltime));
								}
								//加载图表
								$('#container_covi').highcharts({
									exporting:{
										enabled:false
									},
									credits: {
										enabled: false
									},
									chart: {
										type: 'line'
									},
									title: {
										text: '1小时CO,VI检测曲线图'
									},
									subtitle: {
										text: ''
									},
									xAxis: {
										categories: arrCollTime
									},
									yAxis: {
										title: {
											text: ''
										}
									},
									plotOptions: {
										line: {
											dataLabels: {
												enabled: true          // 开启数据标签
											},
											enableMouseTracking: false // 关闭鼠标跟踪，对应的提框、点击事件会失效
										}
									},
									series: [{
										name: 'CO检测值',
										data: arrCo
									},
									{
										name: 'VI检测值',
										data: arrVi
									}]
								});
							},
							error: function(json){}
						});
					}
				});
			}
		})
	}
	//FSFX单击
	if(picclass=="default-pic-FSFX"){
		$("#"+ id +"").on('click',function(){
			if(flag){
				var fsfxid=$(this).attr("id");
				layer.open({
					type: 1 //此处以iframe举例
					,title: $("#control_menu_fsfx").html()
					,area: ['800px', '480px']
					,shade: 0
					,maxmin: true
					,offset: [Ht+10]
					,id: 'LAY_control_data_fsfx' //防止重复弹出
					,content: $("#control_data_fsfx")
					,btn: ['关闭'] //只是为了演示
					,yes: function(index, layero){
						layer.close(index);
					}
					,zIndex: layer.zIndex //重点1
					,success: function(layero){
						layer.setTop(layero); //重点2
						for(var i=0;i<arr_FSFX.length;i++){
							if(arr_FSFX[i][1]==fsfxid){
								var fsfxstate=arr_FSFX[i][18];
								var fsfx_img=returnStatePic("fsfx",fsfxstate);
								var fsfx_statename=returnStateName(fsfxstate);
								var fsfx_name=arr_FSFX[i][4];
								var fsfx_addr=arr_FSFX[i][5];
								$("#fsfx_img").attr("src",fsfx_img);
								$("#fsfx_name").html(fsfx_name);
								$("#fsfx_addr").html(fsfx_addr);
								$("#fsfx_state").html(fsfx_statename);
								//取最近的一次值
								var fsfx_fsval=arr_FSFX[i][21];
								var fsfx_fxval=arr_FSFX[i][22];
								//风向
								if(parseInt(fsfx_fxval)==1){
									fsfx_fxval="往拉萨方向";
								}else{
									fsfx_fxval="往林芝方向"
								}
								$("#fsfx_fsval").html(fsfx_fsval);
								$("#fsfx_fxval").html(fsfx_fxval);
							}
						}
						$.ajax({
							type: "GET",
							url : "json/getrptfsfx.asp?itype=4&devid="+ fsfxid +"&dc=" + new Date().getTime() + "",
							//data:{},
							dataType: "json",
							success: function(data){
								var arrFs=[];
								var arrCollTime=[];
								for(i=0;i<data.data.length;i++){
									arrFs.push(parseInt(data.data[i].fsval));
									arrCollTime.push(returnFormatTime(data.data[i].colltime));
								}
								//加载图表
								$('#container_fsfx').highcharts({
									exporting:{
										enabled:false
									},
									credits: {
										enabled: false
									},
									chart: {
										type: 'line'
									},
									title: {
										text: '1小时风速检测曲线图'
									},
									subtitle: {
										text: ''
									},
									xAxis: {
										categories: arrCollTime
									},
									yAxis: {
										title: {
											text: ''
										}
									},
									plotOptions: {
										line: {
											dataLabels: {
												enabled: true          // 开启数据标签
											},
											enableMouseTracking: false // 关闭鼠标跟踪，对应的提示框、点击事件会失效
										}
									},
									series: [{
										name: '风速检测值(m/s)',
										data: arrFs
									}]
								});
							},
							error: function(json){}
						});
					}
				});
			}
		})
	}
	//光强度单击
	if(picclass=="default-pic-LIGHT"){
		$("#"+ id +"").on('click',function(){
			if(flag){
				var lightid=$(this).attr("id");
				layer.open({
					type: 1 //此处以iframe举例
					,title: $("#control_menu_light").html()
					,area: ['800px', '480px']
					,shade: 0
					,maxmin: true
					,offset: [Ht+10]
					,id: 'LAY_control_data_light' //防止重复弹出
					,content: $("#control_data_light")
					,btn: ['关闭'] //只是为了演示
					,yes: function(index, layero){
						layer.close(index);
					}
					,zIndex: layer.zIndex //重点1
					,success: function(layero){
						layer.setTop(layero); //重点2
						for(var i=0;i<arr_LIGHT.length;i++){
							if(arr_LIGHT[i][1]==lightid){
								var lightstate=arr_LIGHT[i][18];
								var light_img=returnStatePic("light",lightstate);
								var light_statename=returnStateName(lightstate);
								var light_name=arr_LIGHT[i][4];
								var light_addr=arr_LIGHT[i][5];
								$("#light_img").attr("src",light_img);
								$("#light_name").html(light_name);
								$("#light_addr").html(light_addr);
								$("#light_state").html(light_statename);
								//取最近的一次值
								var light_inval=arr_LIGHT[i][21];
								var light_outval=arr_LIGHT[i][22];
								$("#light_inval").html(light_inval);
								$("#light_outval").html(light_outval);
							}
						}
						$.ajax({
							type: "GET",
							url : "json/getrptlight.asp?itype=4&devid="+ lightid +"&dc=" + new Date().getTime() + "",
							//data:{},
							dataType: "json",
							success: function(data){
								var arrIn=[];
								var arrOut=[];
								var arrCollTime=[];
								for(i=0;i<data.data.length;i++){
									arrIn.push(parseInt(data.data[i].inval));
									arrOut.push(parseInt(data.data[i].outval));
									arrCollTime.push(returnFormatTime(data.data[i].colltime));
								}										
								//加载图表
								$('#container_light').highcharts({
									exporting:{
										enabled:false
									},
									credits: {
										enabled: false
									},
									chart: {
										type: 'line'
									},
									title: {
										text: '1小时光强检测曲线图'
									},
									subtitle: {
										text: ''
									},
									xAxis: {
										categories: arrCollTime
									},
									yAxis: {
										title: {
											text: ''
										}
									},
									plotOptions: {
										line: {
											dataLabels: {
												enabled: true          // 开启数据标签
											},
											enableMouseTracking: false // 关闭鼠标跟踪，对应的提示框、点击事件会失效
										}
									},
									series: [{
										name: '洞内检测值(lx)',
										data: arrIn
									},
									{
										name: '洞外检测值(cd/m2)',
										data: arrOut
									}]
								});
							},
							error: function(json){}
						});
					}
				});
			}
		})
	}
	//摄像机单击
	if(picclass=="default-pic-CAM"){
		$("#"+ id +"").on('click',function(){
			var camtitle=$(this).attr("title");
			ipaddr=	$(this).attr("ipaddr");
			ipport="";
			//ipport=	$(this).attr("ipport");
			ipchannel=$(this).attr("channel");
			
			//拖动是否单击
			if(flag){
				if($(this).attr("state")!=2){//非故障时
					var index = layer.load(1, {time: 1*1000});
					if(camtitle.indexOf("#")<0){
					    setCameraobj(id,camtitle,ipaddr,ipport,ipchannel);	    //单IP
					}else{
						setCameraobjEx(id,camtitle,ipaddr,ipport,ipchannel);	//16路
					}
				}else{
					sendScreenMSG("设备故障!");
				}
			}
			
		})
	}
	//拖动保存坐标
	if($("#setmap").length!=0){
		$("."+ picclass +"").draggable({
			start: function() {
				flag=false;
			},
			stop: function() {
				setTimeout(function(){flag=true;},500);
				var Ht= parseInt($("#default_top_panel").height());
				var id=$(this).attr("id");
				var xvalue=$(this).offset().left;
				var yvalue=$(this).offset().top-Ht;
				var wvalue=$("#default_panel_img").width();
				var hvalue=$("#default_panel_img").height();
				xvalue=xvalue*100/wvalue;
				yvalue=yvalue*100/hvalue;
				$.ajax({
					type: "GET",
					url : "json/setxy.asp?itype=1&id="+ id +"&xvalue="+ xvalue +"&yvalue="+ yvalue +"&dc=" + new Date().getTime() + "",
					//data:{},
					dataType: "json",
					success: function(data){
						//sendThisScreenMSG(data.msg);
					}
				})
			}
		});
	}
}

//右键设置状态
function rightMenuAjax(classname,id,state,act){
	var rightflag=false;//控制模式标识
	switch(classname){
		case "TS":
			rightflag=true;
			break;
		case "LED":
			if($("#control_LED_select").val()!=0){
				alert("照明控制模式不是手动控制模式，无法控制");
			}else{
				rightflag=true;
			}
			break;
		case "FAN":
			if($("#control_FAN_select").val()!=0){
				alert("风机控制模式不是手动控制模式，无法控制");
			}else{
				rightflag=true;
			}
			break;
		case "LS":
			rightflag=true;
			break;
		case "DOOR":
			rightflag=true;
			break;
	}
	if(rightflag==true){
		var controlflag=false;//PLC runmode标识
		var plcid=-1;
		var runmode=0;
		//获取数组序号
		tno=$("#"+ id +"").attr("arrnum");
		switch(classname){
			case "TS":
				plcid=arr_TS[tno][25];
				break;
			case "LED":
				plcid=arr_LED[tno][25];
				break;
			case "FAN":
				plcid=arr_FAN[tno][25];
				break;
			case "LS":
				plcid=arr_LS[tno][25];
				break;
			case "DOOR":
				plcid=arr_DOOR[tno][25];
				break;
		}
		//取得设备控制模式
		for(var i=0;i<arr_PLC.length;i++){
			if(arr_PLC[i][1]==plcid){
				runmode=arr_PLC[i][7];
				break;
			}
		}
		if(runmode==0){
			alert("PLC在本地控制模式,不能发送命令");
		}else{
			//如果是风机
			if(classname=="FAN"){
				fango=arr_FAN[tno][19];//本机正反转
				switch(act){
					case "FAN_stop":
						controlflag=true;
						break;
					case "FAN_right":
						//本机判断
						if(fango==2){
							alert("本台风机正在反转,不能执行正转操作");
							break;
						}
						//同组判断
						this_groupid=arr_FAN[tno][12];
						var same_id=-1;
						for(var j=0;j<arr_FAN.length;j++){
							if(this_groupid==arr_FAN[j][12] && j!=tno){
								same_id=j;
								break;
							}	
						}
						if(same_id!=-1){
							same_i1=arr_FAN[same_id][19];
							if(same_i1==2){									
								alert("同组另一台风机正在反转,不能执行正转操作");
							}else{
								controlflag=true;
							}
						}else{
							controlflag=true;	
						}
						break;
					case "FAN_left":						
						//本机判断
						if(fango==1){
							alert("本台风机正在正转,不能执行反转操作");
							break;
						}
						//同组判断
						this_groupid=arr_FAN[tno][12];
						var same_id=-1;
						for(var j=0;j<arr_FAN.length;j++){
							if(this_groupid==arr_FAN[j][12] && j!=tno){
								same_id=j;
								break;
							}	
						}
						if(same_id!=-1){
							same_i1=arr_FAN[same_id][19];
							if(same_i1==1){									
								alert("同组另一台风机正在正转,不能执行反转操作");
							}else{
								controlflag=true;
							}
						}else{
							controlflag=true;
						}
						break;
				}
			}else{
				controlflag=true;
			}		
		}
		if(controlflag==true){
			nowflag=false;//当前状态标识
			fango=-1;
			switch(classname){
				case "FAN":
					fango=arr_FAN[tno][19];
					break;
				case "TS":
					fango=arr_TS[tno][19];
					break;
				case "LS":
					fango=arr_LS[tno][19];
					break;
				case "LED":
					fango=arr_LED[tno][19];
					break;
				case "DOOR":
					fango=arr_DOOR[tno][19];
					break;
			}
			if(fango!=state){
				nowflag=true;
			}else{
				alert("要更改的为当前状态！");
			}
			if(nowflag==true){
				var changetype;
				var cname;
				var tip;
				switch(classname){
					case "TS":
						changetype="信息灯控制";
						cname=arr_TS[tno][13];
						switch(act){
							case "TS_red":
								tip="调整红灯";
								break;
							case "TS_yellow":
								tip="调整黄灯";
								break;
							case "TS_green":
								tip="调整绿灯";
								break;
							case "TS_turnleft":
								tip="调整左转";
								break;
						}
						break;
					case "LED":
						changetype="照明控制";
						cname=arr_LED[tno][13];
						switch(act){
							case "LED_close":
								tip="关灯";
								break;
							case "LED_open":
								tip="开灯";
								break;
						}
						break;
					case "FAN":
						changetype="风机控制";
						cname=arr_FAN[tno][13];
						switch(act){
							case "FAN_stop":
								tip="停止";
								break;
							case "FAN_right":
								tip="正转";
								break;
							case "FAN_left":
								tip="反转";
								break;
						}
						break;
					case "DOOR":
						changetype="横洞门控制";
						cname=arr_DOOR[tno][13];
						switch(act){
							case "DOOR_up":
								tip="上升";
								break;
							case "DOOR_default":
								tip="停止";
								break;
							case "DOOR_down":
								tip="下降";
								break;
						}
						break;
					case "LS":
						changetype="信息灯控制";
						cname=arr_LS[tno][13];
						switch(act){
							case "LS_stop":
								tip="禁止";
								break;
							case "LS_go":
								tip="通行";
								break;
							case "LS_twoway":
								tip="双向禁行";
								break;
							case "LS_right":
								tip="正向通行";
								break;
							case "LS_left":
								tip="反向通行";
								break;
							case "LS_turnleft":
								tip="左转通行";
								break;
						}
						break;
				}
				cname=encodeURIComponent(cname);//转码，防止设备名出现特殊字符导致出现提交问题
				tip=encodeURIComponent(tip);
				$.ajax({
						type: "GET",
						url : "json/setvalue.asp?itype=1&id="+ id +"&state="+ state +"&changetype="+ changetype +"&cname="+ cname +"&tip="+ tip +"&dc=" + new Date().getTime() + "",
						//data:{},
						dataType: "json",
						success: function(data){
							sendThisScreenMSG(data.msg);
						}
				})
			}
		}
	}
}

function updatePic(){
	for(i=0;i<$(".default-checkbox").length;i++){
		if ($(".default-checkbox:eq("+ i +")").is(":checked")) {
			var typevalue=$(".default-checkbox:eq("+ i +")").attr("typename");
			var picclass=returnPicclass(typevalue);
			var selectvalue=$("#default_place_select").val();
			defaultAjax(typevalue,selectvalue,picclass,1);
		}
	}
}

//日期格式化
function returnDate(type){
	backDate="";
	thisDate=new Date();
	yearstr=thisDate.getFullYear();
	monthstr=thisDate.getMonth()+1;
	datestr=thisDate.getDate();
	//补0
	if(datestr<10){
		datestr="0"+datestr;
	}
	if(monthstr<10){
		monthstr="0"+monthstr;
	}
	switch(type){
		case 1:
			backDate=yearstr+"-"+ monthstr +"-"+datestr;
			break;
		case 2:
			backDate=yearstr+"-"+ monthstr;
			break;
		case 3:
			backDate=yearstr;
	}
	return backDate;
}

//时间格式化
function returnFormatTime(timestr){
	backTime="";
	thisTime=new Date(timestr);
	hourstr=thisTime.getHours();
	minutesstr=thisTime.getMinutes();
	//补0
	if(minutesstr<10){
		minutesstr="0"+minutesstr;
	}
	backTime=hourstr+":"+minutesstr;
	return backTime;
}

//plc状况
function showPlc(){
	$(".plc-list-show").remove();
	for (var snum=0;snum<arr_PLC.length;snum++){
		var arrnum=arr_PLC[snum][0];
		var sdid=arr_PLC[snum][2];
		//状况
		var id=arr_PLC[snum][1];
		var name=arr_PLC[snum][3];
		var statego=arr_PLC[snum][4];
		var stategotime=arr_PLC[snum][5];
		var state=arr_PLC[snum][6];
		var runmode=arr_PLC[snum][7];
		var plcpicurl;
		if(state==2){
			plcpicurl="../pic/plc_r.gif";
		}else{
			plcpicurl="../pic/plc_g.gif";
		}
		//判断有无PLC
		var plcmodule="<div class=\"plc-list-show\" id=\"plc_id_"+ id +"\">";
		plcmodule=plcmodule + ""+ name +"";
		plcmodule=plcmodule + "<span><img src=\""+ plcpicurl +"\" /></span>";
		plcmodule=plcmodule + "</div>";
		$("#plc_show").append(plcmodule);
	}
}

//20秒更新plc状况
function updatePlc(){
	var plcflag=false;
	for (var snum=0;snum<arr_PLC.length;snum++){
		var statego=arr_PLC[snum][4];
		if(statego==true){
			plcflag=true;
		}
		//更新状态
		arr_PLC[snum][4]=false;
	}
	if(plcflag==true){
		showPlc();
	}
}

//切换屏
function changeTab(obj,tnum){
    $(".tab_select").addClass("tab_noselect").removeClass("tab_select");
    $(obj).addClass("tab_select").removeClass("tab_noselect");
    //所有的TAB数量，加1为只显示一个
    for(var i=1;i<=$(".tab_noshow").length+1;i++){
        $("#tabinfo"+ i +"").addClass("tab_noshow").removeClass("tab_show");
    }
    $("#tabinfo"+ tnum +"").addClass("tab_show").removeClass("tab_noshow");   
}

//照明加载亮度检测下拉框
function controlLedAjax(){
	$("#controlLED_select option").remove();
	//增加默认项
	var ledoption="<option value=\"-1\" tunnel=\"-1\" selected>请选择</option>";
	for(var i=0;i<arr_LIGHT.length;i++){
		ledoption=ledoption+"<option value=\""+ arr_LIGHT[i][0] +"\" tunnel=\""+  arr_LIGHT[i][2] 
			+"\" >"+  arr_LIGHT[i][13] +"</option>";
	}
	$("#controlLED_select").append(ledoption);
	layuiFormUpdate(1);
}

//照明加载控制参数
function controlLedArray(sn){
	//控制方案判断阀值
	//读取数组
	//晴天
	qin_use=arr_ZM1[sn][2][0][1];
	qin_hint=arr_ZM1[sn][2][0][2];
	outvala2=arr_ZM1[sn][2][0][3];
	outvala1=arr_ZM1[sn][2][0][4];
	invala2=arr_ZM1[sn][2][0][5];
	invala1=arr_ZM1[sn][2][0][6];
	//阴天
	yin_use=arr_ZM1[sn][2][1][1];
	yin_hint=arr_ZM1[sn][2][1][2];
	outvalb2=arr_ZM1[sn][2][1][3];
	outvalb1=arr_ZM1[sn][2][1][4];
	invalb2=arr_ZM1[sn][2][1][5];
	invalb1=arr_ZM1[sn][2][1][6];
	//晚上
	wan_use=arr_ZM1[sn][2][2][1];
	wan_hint=arr_ZM1[sn][2][2][2];
	outvalc2=arr_ZM1[sn][2][2][3];
	outvalc1=arr_ZM1[sn][2][2][4];
	invalc2=arr_ZM1[sn][2][2][5];
	invalc1=arr_ZM1[sn][2][2][6];
	//夜间
	ye_use=arr_ZM1[sn][2][3][1];
	ye_hint=arr_ZM1[sn][2][3][2];
	outvald2=arr_ZM1[sn][2][3][3];
	outvald1=arr_ZM1[sn][2][3][4];
	invald2=arr_ZM1[sn][2][3][5];
	invald1=arr_ZM1[sn][2][3][6];
	zmintal=ZMIntel1;
	$("#input_outvala2").val(outvala2);
	$("#input_outvala1").val(outvala1);
	$("#input_invala2").val(invala2);
	$("#input_invala1").val(invala1);
	$("#input_outvalb2").val(outvalb2);
	$("#input_outvalb1").val(outvalb1);
	$("#input_invalb2").val(invalb2);
	$("#input_invalb1").val(invalb1);
	$("#input_outvalc2").val(outvalc2);
	$("#input_outvalc1").val(outvalc1);
	$("#input_invalc2").val(invalc2);
	$("#input_invalc1").val(invalc1);
	$("#input_outvald2").val(outvald2);
	$("#input_outvald1").val(outvald1);
	$("#input_invald2").val(invald2);
	$("#input_invald1").val(invald1);
	$("#input_zmintal").val(zmintal);//分隔时间
	if(qin_use==0){
		$("#qin_use").prop("checked",false);
	}else{
		$("#qin_use").prop("checked",true);
	}
	if(qin_hint==0){
		$("#qin_hint").prop("checked",false);
	}else{
		$("#qin_hint").prop("checked",true);
	}
	if(yin_use==0){
		$("#yin_use").prop("checked",false);
	}else{
		$("#yin_use").prop("checked",true);
	}
	if(yin_hint==0){
		$("#yin_hint").prop("checked",false);
	}else{
		$("#yin_hint").prop("checked",true);
	}
	if(wan_use==0){
		$("#wan_use").prop("checked",false);
	}else{
		$("#wan_use").prop("checked",true);
	}
	if(wan_hint==0){
		$("#wan_hint").prop("checked",false);
	}else{
		$("#wan_hint").prop("checked",true);
	}
	if(ye_use==0){
		$("#ye_use").prop("checked",false);
	}else{
		$("#ye_use").prop("checked",true);
	}
	if(ye_hint==0){
		$("#ye_hint").prop("checked",false);
	}else{
		$("#ye_hint").prop("checked",true);
	}
}

//照明控制参数数组赋值
function controlLedArraySave(sn){
	//控制方案判断阀值
	//晴天
	if ($("#qin_use").is(":checked")) {
		qin_use=1;
	}else{
		qin_use=0;
	}
	if ($("#qin_hint").is(":checked")) {
		qin_hint=1;
	}else{
		qin_hint=0;
	}
	arr_ZM1[sn][2][0][1]=qin_use;
	arr_ZM1[sn][2][0][2]=qin_hint;
	arr_ZM1[sn][2][0][3]=$("#input_outvala2").val();
	arr_ZM1[sn][2][0][4]=$("#input_outvala1").val();
	arr_ZM1[sn][2][0][5]=$("#input_invala2").val();
	arr_ZM1[sn][2][0][6]=$("#input_invala1").val();
	//阴天
	if ($("#yin_use").is(":checked")) {
		yin_use=1;
	}else{
		yin_use=0;
	}
	if ($("#yin_hint").is(":checked")) {
		yin_hint=1;
	}else{
		yin_hint=0;
	}
	arr_ZM1[sn][2][1][1]=yin_use;
	arr_ZM1[sn][2][1][2]=yin_hint;
	arr_ZM1[sn][2][1][3]=$("#input_outvalb2").val();
	arr_ZM1[sn][2][1][4]=$("#input_outvalb1").val();
	arr_ZM1[sn][2][1][5]=$("#input_invalb2").val();
	arr_ZM1[sn][2][1][6]=$("#input_invalb1").val();
	//晚上
	if ($("#wan_use").is(":checked")) {
		wan_use=1;
	}else{
		wan_use=0;
	}
	if ($("#wan_hint").is(":checked")) {
		wan_hint=1;
	}else{
		wan_hint=0;
	}
	arr_ZM1[sn][2][2][1]=wan_use;
	arr_ZM1[sn][2][2][2]=wan_hint;
	arr_ZM1[sn][2][2][3]=$("#input_outvalc2").val();
	arr_ZM1[sn][2][2][4]=$("#input_outvalc1").val();
	arr_ZM1[sn][2][2][5]=$("#input_invalc2").val();
	arr_ZM1[sn][2][2][6]=$("#input_invalc1").val();
	//夜间
	if ($("#ye_use").is(":checked")) {
		ye_use=1;
	}else{
		ye_use=0;
	}
	if ($("#ye_hint").is(":checked")) {
		ye_hint=1;
	}else{
		ye_hint=0;
	}
	arr_ZM1[sn][2][3][1]=ye_use;
	arr_ZM1[sn][2][3][2]=ye_hint;
	arr_ZM1[sn][2][3][3]=$("#input_outvald2").val();
	arr_ZM1[sn][2][3][4]=$("#input_outvald1").val();
	arr_ZM1[sn][2][3][5]=$("#input_invald2").val();
	arr_ZM1[sn][2][3][6]=$("#input_invald1").val();
	ZMIntel1=$("#input_zmintal").val();//分隔时间
}

//照明加载设备关系表动作关联
function loadLedPlan(sn,num){
	if(typeof(arr_ZM1[sn][3][num])!= "undefined"){
		//表格动作关联
		for(var i=0;i<arr_ZM1[sn][3][num].length;i++){
			if(arr_ZM1[sn][3][num][i][1]==0){
				$("#ledrelation_relation_"+ arr_ZM1[sn][3][num][i][0] +"").prop("checked",false);
			}else{
				$("#ledrelation_relation_"+ arr_ZM1[sn][3][num][i][0] +"").prop("checked",true);
			}
			if(arr_ZM1[sn][3][num][i][2]==0){
				$("#ledrelation_action_"+ arr_ZM1[sn][3][num][i][0] +"").prop("checked",false);
			}else{
				$("#ledrelation_action_"+ arr_ZM1[sn][3][num][i][0] +"").prop("checked",true);
			}
		}
		layuiFormUpdate(2);//checkbox
	}
}

//风机加载COVI检测下拉框
function controlFanAjax(){
	$("#controlFAN_select option").remove();
	//增加默认项
	var fanoption="<option value=\"-1\" tunnel=\"-1\" selected>请选择</option>";
	for(var i=0;i<arr_COVI.length;i++){
		fanoption=fanoption+"<option value=\""+ arr_COVI[i][0] +"\" tunnel=\""+ arr_COVI[i][2] 
			+"\">"+  arr_COVI[i][13] +"</option>";
	}
	$("#controlFAN_select").append(fanoption);
	layuiFormUpdate(1);
}

//风机加载对应风向下拉框内容
function controlFsfxAjax(tunnel){
	$("#fan_plan_select option").remove();
	//增加默认项
	var fsfxoption="<option value=\"0\" selected>请选择</option>";	
	for(var i=0;i<arr_FSFX.length;i++){
		if(arr_FSFX[i][2]==tunnel){
			fsfxoption=fsfxoption+"<option value=\""+ arr_FSFX[i][1] +"\" >"+  arr_FSFX[i][13] +"</option>";
		}
	}
	$("#fan_plan_select").append(fsfxoption);
	layuiFormUpdate(1);
}

//风机加载控制参数
function controlFanArray(sn){
	//控制方案判断阀值
	//读取数组
	var datause=arr_FJ[sn][2];
	//是否启用
	if(datause==0){
		$("input[name=useFan]").prop("checked",false);
	}else{
		$("input[name=useFan]").prop("checked",true);
	}
	var c1hint=arr_FJ[sn][3][0][1];
	var c1cmin=arr_FJ[sn][3][0][2];
	var c1cmax=arr_FJ[sn][3][0][3];
	var c1vmin=arr_FJ[sn][3][0][4];
	var c1vmax=arr_FJ[sn][3][0][5];
	var c2hint=arr_FJ[sn][3][1][1];
	var c2cmin=arr_FJ[sn][3][1][2];
	var c2cmax=arr_FJ[sn][3][1][3];
	var c2vmin=arr_FJ[sn][3][1][4];
	var c2vmax=arr_FJ[sn][3][1][5];
	var c3hint=arr_FJ[sn][3][2][1];
	var c3cmin=arr_FJ[sn][3][2][2];
	var c3cmax=arr_FJ[sn][3][2][3];
	var c3vmin=arr_FJ[sn][3][2][4];
	var c3vmax=arr_FJ[sn][3][2][5];
	var fjintal=FJIntel;
	//是否控制提示
	if(c1hint==0){
		$("input[name=hintFan1]").prop("checked",false);
	}else{
		$("input[name=hintFan1]").prop("checked",true);
	}
	if(c2hint==0){
		$("input[name=hintFan2]").prop("checked",false);
	}else{
		$("input[name=hintFan2]").prop("checked",true);
	}
	if(c3hint==0){
		$("input[name=hintFan3]").prop("checked",false);
	}else{
		$("input[name=hintFan3]").prop("checked",true);
	}
	$("#input_c1cmin").val(c1cmin);
	$("#input_c1cmax").val(c1cmax);
	$("#input_c1vmin").val(c1vmin);
	$("#input_c1vmax").val(c1vmax);
	$("#input_c2cmin").val(c2cmin);
	$("#input_c2cmax").val(c2cmax);
	$("#input_c2vmin").val(c2vmin);
	$("#input_c2vmax").val(c2vmax);
	$("#input_c3cmin").val(c3cmin);
	$("#input_c3cmax").val(c3cmax);
	$("#input_c3vmin").val(c3vmin);
	$("#input_c3vmax").val(c3vmax);
	$("#input_fjintal").val(fjintal);//分隔时间
}

//风机控制参数数组赋值
function controlFanArraySave(sn){
	//控制方案判断阀值
	//是否使用
	if ($("#fan_useFan").is(":checked")) {
		arr_FJ[sn][2]=1;
	}else{
		arr_FJ[sn][2]=0;
	}
	//正常
	if ($("#fan_hintFan1").is(":checked")) {
		arr_FJ[sn][3][0][1]=1;
	}else{
		arr_FJ[sn][3][0][1]=0;
	}
	arr_FJ[sn][3][0][2]=$("#input_c1cmin").val();
	arr_FJ[sn][3][0][3]=$("#input_c1cmax").val();
	arr_FJ[sn][3][0][4]=$("#input_c1vmin").val();
	arr_FJ[sn][3][0][5]=$("#input_c1vmax").val();
	//报警
	if ($("#fan_hintFan2").is(":checked")) {
		arr_FJ[sn][3][1][1]=1;
	}else{
		arr_FJ[sn][3][1][1]=0;
	}
	arr_FJ[sn][3][1][2]=$("#input_c2cmin").val();
	arr_FJ[sn][3][1][3]=$("#input_c2cmax").val();
	arr_FJ[sn][3][1][4]=$("#input_c2vmin").val();
	arr_FJ[sn][3][1][5]=$("#input_c2vmax").val();
	//关闭
	if ($("#fan_hintFan3").is(":checked")) {
		arr_FJ[sn][3][2][1]=1;
	}else{
		arr_FJ[sn][3][2][1]=0;
	}	
	arr_FJ[sn][3][2][2]=$("#input_c3cmin").val();
	arr_FJ[sn][3][2][3]=$("#input_c3cmax").val();
	arr_FJ[sn][3][2][4]=$("#input_c3vmin").val();
	arr_FJ[sn][3][2][5]=$("#input_c3vmax").val();
	FJIntel=$("#input_fjintal").val();//分隔时间
}

//风机加载设备关系表关联
function loadFanPlan(sn){
	if(typeof(arr_FJ[sn][6])!= "undefined"){
		//表格内容关
		for(var i=0;i<arr_FJ[sn][6].length;i++){
			if(arr_FJ[sn][6][i][1]==0){
				$("#fanrelation_relation_"+ arr_FJ[sn][6][i][0] +"").prop("checked",false);
			}else{
				$("#fanrelation_relation_"+ arr_FJ[sn][6][i][0] +"").prop("checked",true);
			}
		}
		layuiFormUpdate(2);//checkbox
	}
}

//表格数组转为JSON
function getdevjson(devtype,tunnel){
	var arr_;
	var rows="";
	if (devtype == "FAN"){
		arr_=arr_FAN;
	}
	if (devtype == "LED"){
		arr_=arr_LED;
	}
	var count = 0;
	for (var i=0;i<arr_.length;i++){
		if (arr_[i][2]==tunnel||tunnel==-1){
			if (count >0 && i <arr_.length){
				rows=rows + ",";
			}
			count = count +1;
			rows=rows + "{\"id\":\"" + arr_[i][1] + "\",\"ename\":\"" + arr_[i][4] + "\",\"cname\":\"" + arr_[i][13] + "\",\"tunnel\":\"" + arr_TUNNEL[arr_[i][2]][2] + "\",\"formatSpace\":\"\",\"actionstr\":\"\",\"relationstr\":\"\"}";
		}
	}
	return "{\"total\": " +count+ ",\"rows\": [" +rows+ "]}";
}

//界面控制-信号灯数组转为JSON
function getCnvertJson(updown,tunnel){
	var rows="";
	var count = 0;
	var arr_ = arr_LS;
	for (var i=0;i<arr_.length;i++){
		if (arr_[i][2]==tunnel && arr_[i][6]==updown)
		{
			if (count >0 && i <arr_.length) rows=rows + ",";
			count = count +1;
			rows=rows + "{\"id\":\"" + arr_[i][1] + "\",\"ename\":\"" + arr_[i][4] + "\",\"operationstr\":\"\",\"shape\":\"" + arr_[i][9] + "\",\"cname\":\"" + arr_[i][13] + "\",\"devtpyename\":\"LS\",\"formatSpace\":\"\"}";
		}
	}
	arr_ = arr_TS;
	for (var i=0;i<arr_.length;i++){
		if (arr_[i][2]==tunnel && arr_[i][6]==updown)
		{
			if (count >0 && i <arr_.length) rows=rows + ",";
			count = count +1;
			rows=rows + "{\"id\":\"" + arr_[i][1] + "\",\"ename\":\"" + arr_[i][4] + "\",\"operationstr\":\"\",\"shape\":\"" + arr_[i][9] + "\",\"cname\":\"" + arr_[i][13] + "\",\"devtpyename\":\"TS\",\"formatSpace\":\"\"}";
		}
	}
	return "{\"total\": " +count+ ",\"rows\": [" +rows+ "]}";
}

//火灾应急方案JSON
function getFirePlanJson(){
	var rows="";
	
	if(arr_LED.length!=0){
		rows+="{\"name\":\"照明\",\"operationstr\":\"\",\"formatSpace\":\"\"}";
		rows+=",";
	}
	if(arr_FAN.length!=0){
		rows+="{\"name\":\"风机\",\"operationstr\":\"\",\"formatSpace\":\"\"}";
		rows+=",";
	}
	if(arr_DOOR.length!=0){
		rows+="{\"name\":\"防火门\",\"operationstr\":\"\",\"formatSpace\":\"\"}";
		rows+=",";
	}
	if(arr_FB.length!=0){
		rows+="{\"name\":\"手报\",\"operationstr\":\"\",\"formatSpace\":\"\"}";
		rows+=",";
	}
	if(arr_TS.length!=0){
		rows+="{\"name\":\"交通信号灯\",\"operationstr\":\"\",\"formatSpace\":\"\"}";
		rows+=",";
	}
	if(arr_LS.length!=0){
		rows+="{\"name\":\"车道指示器\",\"operationstr\":\"\",\"formatSpace\":\"\"}";
		if(arr_CMS.length!=0){
			rows+=",";
			rows+="{\"name\":\"情报板\",\"operationstr\":\"\",\"formatSpace\":\"\"}";
		}
	}
	
	return "{\"total\": 7,\"rows\": [" +rows+ "]}";
}

//火灾应急方案-情板报参数JSON
function getCmsFontJson(){
	var arrnum=0;
	var rows="";
	var count = 0;
	var arr_split="";
	
	//避免空的错误
	if(ary_cmstext!=""){
		arrnum=1;
		var arr_ = ary_cmstext.split("*");
		var arr_1= ary_cmsstyle.split("*");
	}
	
	if(arrnum==1){
		for (var i=0;i<arr_.length;i++){
			if (count >0 && i <arr_.length) rows=rows + ",";
			count = count +1;
			arr_split= arr_1[i].split(",");
			//if(count<15&&count>11) alert(tranWrap(arr_[i][2]))
			rows=rows+"{\"cmsfontdel\":\"\",\"cmsfontgo\":" + arr_split[0] + ",\"cmsfontspeed\":" + arr_split[1] + ",\"cmsfontstay\":" + arr_split[2] + ",\"cmsfontsize\":" + arr_split[3] + ",\"cmsfontfamily\":" + arr_split[4] + ",\"cmsfontcolor\":" + arr_split[5] + ",\"cmsfontleft\":" + arr_split[7] + ",\"cmsfontright\":" + arr_split[8] + ",\"cmsfontcontent\":\"" + ReplaceSeperator(arr_[i]) + "\"}";
		}
	}
	
	return "{\"total\": "+ count +",\"rows\": [" +rows+ "]}";
}

//火灾应急方案-情板报-预留信息-列表JSON
function getReserveInfoJson(){
	var rows="";
	var count = 0;
	var arr_ = arr_CMSTEXT;
	
	for (var i=0;i<arr_.length;i++){
		if (count >0 && i <arr_.length) rows=rows + ",";
		count = count +1;
		//if(count<15&&count>11) alert(tranWrap(arr_[i][2]))
		rows=rows+"{\"id\":" + arr_[i][1] + ",\"reserveoperationdel\":\"\",\"reservecontent\":\"" + ReplaceSeperator(arr_[i][2]) + "\"}";
	}
	
	return "{\"total\": " +count+ ",\"rows\": [" +rows+ "]}";
}

//删除数组下标的内容
function delArray(arr,index){
　	for(var i=0; i<arr.length; i++) {
		if(i == index) {
			arr.splice(i, 1);
			break;
		}
	}
	
	return arr;
}


